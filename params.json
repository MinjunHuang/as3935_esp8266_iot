{"name":"LightningStop","tagline":"Thunderstorm sensor protected IOT switch","body":"# Thunderstorm sensor protected iot switch\r\n*Another a bit more complex project written in c with espressif sdk for my diploma thesis, so it is all non working and work in progress...*\r\n\r\nCopyright (c) 2015 Uro≈° Golob <golob.uros@gmail.com> \r\n \r\nWork was done with intention to protect electronic devices and so lower e-waste.\r\nIt might work or it may not, just don't sue me if your house burns down or if it kills you...\r\n\r\nThis software and hardware is described in my diploma thesis(work in progress). \r\n   \r\nUse it for *personal* use as you wish, just keep this notice on it if you do! \r\nAnd return changes back free of charge by same restrictions and notice! \r\n\r\nThis software uses espressif sdk software, spi library from David Ogilvy(MetalPhreak) and libesphttpd & wifi settins form Jeroen Domburg(sprite_fm). So use and rescpect their respective licencies for their work. \r\n\r\nDevelopment took alot of time and money so remember me with some spare \r\nbitcoins: 1MaGphnuiMjywjQPKHKF239wzcef4KpNxX if you wish:)\r\n\r\nFor comercial use you can contact me and we can make some separate licencing MIT deal...\r\n\r\n## What it is?\r\nWell this thing uses som crazy trikery from ams... and lovely soc from espressif... \r\nOK as3935 it not so simple chip that uses antena tunned to 500khz to detect lightning discarges.\r\nIt mesures amplitude and uses some crazy statistics to determine distance from face of the thunderstorm.\r\nWell I added a bit of trikery of my own to libesphttpd and used spi driver to talk to as3935 with esp8266.\r\nWhen you mix everything together add coule of pasives transistor, optocoupler and relay you got a switch that disangages relay when we detect nearby thunderstorm. \r\n\r\nThis is my baby and so work in progress and will probably newer be perfect.\r\n\r\nWell you can order boards from [DirtyPCB's] \r\n(http://dirtypcbs.com/view.php?share=10417&accesskey=882ad84b962361d538d1656b4bbab783)\r\n\r\n## bom: \r\n * esp-201 or esp12 or esp12e\r\n * as3935\r\n * ma5532\r\n * ams1117 3.3\r\n * optotransistor\r\n * npn\r\n * couple of R, C & D \r\n\r\n## how to:\r\n1. get yourself working esp-open-sdk + newer sdk from espressif and link it to esp-open-sdk/sdk \r\n2. aditionaly get working sprite_fm libesphttpd and cats/led example so you can check and update any changes... \r\n3. find spi driver from MetalPhreak and check that example\r\n\r\n * I shuld add everithing as git submodules, but as of now i don't know how...\r\n\r\n * make sure to export your esp-open-sdk/xtensa-lx106-elf/bin path to system path... additionaly export esp-open-sdk/sdk as SDK_BASE, then ESPTOOL... in ubuntu it is best to do it in .profile  \r\n\r\n4. from as3935_esp8266_iot folder run\r\n\r\n\t**make clean all**\r\n\r\n5. put esp into boot mode (i have reset and boot(rst and gpio0 respectivly to gnd) buttons soldered into my board) so press reset and boot then lift reset first then boot and run\r\n\r\n\t**make burn** \r\nor \r\n\t**sudo make burn** \r\nif your dialout permision thingy stufs aren't setup properly\r\n\r\n6. for debbuging\r\n\r\n\t**make tty**\r\n\r\n7. setup geany for above commnds it will save you lots of time\r\n\r\n*todo: fix all issues*\r\n\r\n## user interface looks like this: \r\n![settings web page]\r\n(https://github.com/na1pir/as3935_esp8266_iot/blob/master/webpage.png?raw=true)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}